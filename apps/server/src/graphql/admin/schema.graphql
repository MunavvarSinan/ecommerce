#import Vendor from '../vendor/schema.graphql'
#import Category from '../category/category.graphql'
#import Product from '../product/product.graphql'

type Admin {
  id: ID!
  name: String!
  email: String!
  phone: String!
  role: String!
  passwordHash: String!
}
input ProductInput {
  name: String!
  description: String!
  price: Float!
  quantity: Int!
  image: String!
}

type Mutation {
  createVendor(name: String!, email: String!, phone: String!, password: String!, address: String!): Vendor!
  createAdmin(name: String!, phone: String!, email: String!, password: String!): Admin!
  createCategory(name: String!, parentId: String, description: String): Category!
  updateCategory(id: ID!, name: String, parentId: String, description: String): Category!
  deleteCategory(id: ID!): Category!
}

type Query {
  getAdmins: [Admin!]!
  getAdmin(id: ID!, role: String!): Admin!
  getVendors: [Vendor!]!
  getVendor(id: ID!): Vendor!
  getCategories: [Category!]!
  getCategory(id: ID!): Category!
  #   getCategories: [Category!]!
  #   getCategory(id: ID!): Category!
  #   getStores: [Store!]!
  #   getStore(id: ID!): Store!
  #   getProducts: [Product!]!
  #   getProduct(id: ID!): Product!
}

type userRole {
  id: ID!
  role: String!
}
type AuthResult {
  authToken: String!
  user: userRole!
}
